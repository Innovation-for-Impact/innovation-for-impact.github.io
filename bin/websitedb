set -Eeuo pipefail

# Sanity check command line options
usage() {
  echo "Usage: $0 (create|destroy|reset|dump)"
}

if [ $# -ne 1 ]; then
  usage
  exit 1
fi

DB_PATH="var/website.sqlite3"
UPLOADS_DIR="var/uploads"
SCHEMA_SQL="sql/schema.sql"
DATA_SQL="sql/data.sql"
UPLOADS_SRC="sql/uploads"

# Parse argument.  $1 is the first argument
case $1 in
  "create")
    if [ -f "$DB_PATH" ]; then
      echo "Error: database already exists"
      exit 1
    fi
    mkdir -p "$UPLOADS_DIR"
    sqlite3 "$DB_PATH" < "$SCHEMA_SQL"
    sqlite3 "$DB_PATH" < "$DATA_SQL"
    cp "$UPLOADS_SRC"/* "$UPLOADS_DIR"/
    ;;

  "destroy")
    rm -rf "$DB_PATH" "$UPLOADS_DIR"
    ;;

  "reset")
    rm -rf "$DB_PATH" "$UPLOADS_DIR"
    mkdir -p "$UPLOADS_DIR"
    sqlite3 "$DB_PATH" < "$SCHEMA_SQL"
    sqlite3 "$DB_PATH" < "$DATA_SQL"
    cp "$UPLOADS_SRC"/* "$UPLOADS_DIR"/
    ;;

  "dump")
    for table in team; do
      echo "+ sqlite3 -batch -line $DB_PATH 'SELECT * FROM $table'"
      sqlite3 -batch -line "$DB_PATH" "SELECT * FROM $table"
      echo ""
    done
    ;;

  *)
    usage
    exit 1
    ;;
esac